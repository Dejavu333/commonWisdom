initialExpandLevel: 1
colorFreezeLevel: 2
---
- architecture
  - repository
    - monorepo
    - multirepo
  - data desintegrators
  - service desintegrators
  - interprocess communication
    - sync
      - ==direct call==
      - ==REST==
      - ==gRPC==
      - ==GraphQL==
      - ==SOAP==
    - async
      - ==queue==
      - ==file==
  - data access
    - through shared db
    - through owner
    - through replica
  - deployment
    - monolith
    - distributed
  - coordination
    - orchestrated
    - choreographed
    - free4all
  - consistency
    - eventual
    - atomic
  - requirements
    - functionality
    - cost
      - development
      - maintenance
      - operation
    - performance
      - load balancing
      - caching
      - asynchronous processing
      - lazy loading
      - eager loading
    - maintainability
      - documentation
        - ==OpenAPI==
          - ==swagger==
    - scalability
      - xyz axis scaling
      - auto scaling
      - service discovery
    - testability
      - unit test
      - integration test
      - end to end test
          - consumer driven contract test
            - ==schemathesis==
          - chaos test
          - penetration test
          - fuzz test
          - soak test
          - stress test
          - spike test
          - smoke test
          - regression test
        - static code analysis
        - fitness functions
    - security
      - authentication
      - authorization
      - validation
    - observability
    - resiliency
      - auto healing
      - circuit breaker
      - bulkhead
      - retry
      - timeout
    - portability
      - containerization
      - VM
      - serverless
  - anti patterns
    - ==distributed monolith==
    - ==distributed transaction==
    - ==no clear boundaries==
    - ==no clear ownership of data==
    - ==shared database==
    - ==shared code==
    - ==chatty communication==
    - ==no versioning==
---
atomic: all or none, if an operation consists of multiple steps, either all steps are performed or none are
eventual: if no new updates are made to the given data item, eventually all accesses to that item will return the last updated value
